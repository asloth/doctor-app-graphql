
scalar Time

type UserType {
  id: ID!
  name: String!
  users: [User]
}

type User {
  id: ID!
  name: String!
  email: String!
  password: String!
  userType: UserType!
}

type IdentificationDocument{
  id: ID!
  name: String!
  patients: [Patient]
}

type ClinicHistory {
  id: ID!
  name: String!
  documentUrl: String
  patient: Patient!
}

type Patient {
  id: ID!
  documentId: String!
  name: String!
  lastname: String!
  phoneNumber: String
  sisId: String
  genre: String!
  birthDate: Time!
  address: String!
  district: String!
  region: String!
  identificationDocument: IdentificationDocument!
  user: User!
  clinicHistory: ClinicHistory
  documentIdUrl: String
  attentions: [Attention]
}

type Doctor {
  id: ID!
  name: String!
  lastname: String!
  documentId: String!
  specialty: String!
  collegeNumber: String!
  email: String!
  user: User
  schedule: [DoctorSchedule!]!
  attentions: [Attention!]!
}

type DoctorSchedule{
  id: ID!
  initDate: Time!
  endDate: Time!
  starHour: Int!
  endHour: Int!
  doctor: Doctor!
}

type MedicalCenter {
  id: ID!
  name: String! 
  address: String!
  openHour: Int!
  closeHour: Int!
  attentions: [Attention!]!
}

type Attention {
  id: ID!
  date: Time!
  patient: Patient!
  doctor: Doctor!
  medicalCenter: MedicalCenter!
}

input NewUserType {
  name: String!
}

type Query {
  listUserTypes: [UserType!]!
  listUsers: [User!]!
  listPatiens: [Patient!]!
  listClinicHistories: [ClinicHistory!]!
  listIdentificationDocuments: [IdentificationDocument!]!
}


type Mutation {
  createUserType(input: NewUserType!): UserType
  updateUserType(id:ID!, input:NewUserType! ): UserType
  deleteUserType(id: ID!): UserType
  createUser(name: String!, email: String!, password: String!, usertype: Int!): User
  updateUser(id: ID!, name: String, email: String, password: String): User
  deleteUser(id: ID!): String
  createIdentificationDocument(name: String): IdentificationDocument
  updateIdentificationDocument(id: ID!, name:String!): IdentificationDocument
  deleteIdentificationDocument(id: ID!): String
  createClinicHistory(name: String!, documentUrl: String, patientid: Int!): ClinicHistory
  updateClinicHistory(id: ID!, documentUrl: String!): ClinicHistory
  deleteClinicHistory(id: ID!): String!
  createPatient(documentId: String!, name: String!, lastname:String! , phoneNumber:String, sisId:String, genre:String!, birthDate:Time!, address:String!, district:String!, region:String!, identificationDocumentId: Int!, userid: Int! ): Patient
  updatePatient(id: ID!, documentId: String, name: String, lastname:String, phoneNumber:String, sisId:String, genre:String!, birthDate:Time, address:String, district:String, region:String, identificationDocumentId: Int, userid: Int, clinicHistoryId: Int,documentIdUrl: String ): Patient
  deletePatient(id: ID!): String!
}
